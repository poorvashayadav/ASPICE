name: DevOps Metrics Tracker

on:
  workflow_dispatch:  # Allows manual triggering

jobs:
  collect-metrics:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Install Dependencies
        run: sudo apt-get install jq
      
      - name: Fetch Deployment Frequency
        run: |
          DEPLOYMENTS=$(gh api repos/poorvashayadav/aspice/actions/runs | jq '[.workflow_runs[] | select(.status=="completed") ] | length')
          echo "Deployment Frequency: $DEPLOYMENTS"
          echo "DEPLOYMENTS=$DEPLOYMENTS" >> $GITHUB_ENV

      - name: Fetch Build Success Rate
        run: |
          TOTAL_BUILDS=$(gh api repos/poorvashayadav/aspice/actions/runs | jq '[.workflow_runs[]] | length')
          SUCCESS_BUILDS=$(gh api repos/poorvashayadav/aspice/actions/runs | jq '[.workflow_runs[] | select(.conclusion=="success") ] | length')
          BUILD_SUCCESS_RATE=$(echo "$SUCCESS_BUILDS $TOTAL_BUILDS" | awk '{if ($2>0) print ($1/$2)*100; else print 0}')
          echo "Build Success Rate: $BUILD_SUCCESS_RATE%"
          echo "BUILD_SUCCESS_RATE=$BUILD_SUCCESS_RATE" >> $GITHUB_ENV
      
      - name: Calculate Lead Time for Changes
        run: |
          LEAD_TIME=$(gh api repos/poorvashayadav/aspice/pulls?state=closed | jq '[.[] | select(.merged_at) | (.merged_at | fromdate - .created_at | fromdate) ] | add/length')
          echo "Lead Time for Changes: $LEAD_TIME seconds"
          echo "LEAD_TIME=$LEAD_TIME" >> $GITHUB_ENV
      
      - name: Calculate Mean Time to Recovery (MTTR)
        run: |
          FAILURES=$(gh api repos/poorvashayadav/aspice/actions/runs | jq '[.workflow_runs[] | select(.conclusion=="failure")] | length')
          RECOVERIES=$(gh api repos/poorvashayadav/aspice/actions/runs | jq '[.workflow_runs[] | select(.conclusion=="success")] | length')
          if [ "$FAILURES" -gt 0 ]; then
            MTTR=$(echo "$RECOVERIES $FAILURES" | awk '{print $1/$2}')
          else
            MTTR=0
          fi
          echo "MTTR: $MTTR builds"
          echo "MTTR=$MTTR" >> $GITHUB_ENV
      
      - name: Fetch Successfully Merged PRs
        run: |
          MERGED_PRS=$(gh api repos/poorvashayadav/aspice/pulls?state=closed | jq '[.[] | select(.merged_at)] | length')
          echo "Merged PRs: $MERGED_PRS"
          echo "MERGED_PRS=$MERGED_PRS" >> $GITHUB_ENV
      
      - name: Calculate Average Time to Merge PRs
        run: |
          AVG_MERGE_TIME=$(gh api repos/poorvashayadav/aspice/pulls?state=closed | jq '[.[] | select(.merged_at) | (.merged_at | fromdate - .created_at | fromdate) ] | add/length')
          echo "Average Merge Time: $AVG_MERGE_TIME seconds"
          echo "AVG_MERGE_TIME=$AVG_MERGE_TIME" >> $GITHUB_ENV
      
      - name: Store Metrics in JSON
        run: |
          echo '{
            "Deployment Frequency": "$DEPLOYMENTS",
            "Build Success Rate": "$BUILD_SUCCESS_RATE%",
            "Lead Time for Changes": "$LEAD_TIME seconds",
            "MTTR": "$MTTR builds",
            "Merged PRs": "$MERGED_PRS",
            "Average Merge Time": "$AVG_MERGE_TIME seconds"
          }' > metrics.json
          cat metrics.json
      
      - name: Upload Metrics Artifact
        uses: actions/upload-artifact@v3
        with:
          name: github-metrics
          path: metrics.json
