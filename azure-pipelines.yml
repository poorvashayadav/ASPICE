trigger: none  # No automatic trigger, only manual trigger  

pool:
  vmImage: 'windows-2019'

variables:
  - group: secrets

stages:
  - stage: Build
    displayName: 'Build and Package Application'
    jobs:
      - job: BuildAndPackage
        displayName: 'Build and Package Application'
        steps:
          - checkout: self
          - task: Maven@3
            displayName: 'Maven Clean, Compile and Package'
            inputs:
              mavenPomFile: 'pom.xml'
              goals: 'clean compile package'
              mavenOptions: '-X -DskipTests'

  - stage: Test
    displayName: 'Test'
    dependsOn: Build
    jobs:
      - job: RunCarlaTestScript
        displayName: 'Run Carla Test Script'
        steps:
          - checkout: self
          - script: |
              python -m pip install --upgrade pip
              pip install requests
            displayName: 'Install Python Dependencies'
          - script: |
              python scripts/test_carla.py
            displayName: 'Run Carla Test Script'
            env:
              cb_user: $(cb_user)
              cb_password: $(cb_password)

  - stage: ZipAndPublishArtifacts
    displayName: 'Zip and Publish Artifacts'
    dependsOn: Build
    jobs:
      - job: ZipAndPublish
        displayName: 'Zip and Publish Build Artifacts'
        steps:
          - checkout: self
          - task: PowerShell@2
            displayName: 'Zip Maven Artifacts'
            inputs:
              targetType: 'inline'
              script: |
                $outputPath = "$(Build.ArtifactStagingDirectory)/maven_artifacts.zip"
                Add-Type -AssemblyName System.IO.Compression.FileSystem
                [System.IO.Compression.ZipFile]::CreateFromDirectory("$(System.DefaultWorkingDirectory)/target", $outputPath)
                Write-Output "Artifacts zipped to $outputPath"
          - task: PublishBuildArtifacts@1
            displayName: 'Publish Zipped Artifacts'
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)/maven_artifacts.zip'
              ArtifactName: 'maven_artifacts'
              publishLocation: 'Container'

  - stage: CopyArtifactsAndBuildDockerImage
    displayName: 'Copy Artifacts and Build Docker Image'
    dependsOn: ZipAndPublishArtifacts
    jobs:
      - job: CopyAndBuildDocker
        displayName: 'Download Artifacts and Build Docker Image'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: DownloadPipelineArtifact@2
            displayName: 'Download Build Artifacts'
            inputs:
              artifactName: 'maven_artifacts'
              targetPath: '$(Pipeline.Workspace)/artifacts'
          - script: |
              echo "Contents of $(Pipeline.Workspace)/artifacts:"
              ls -R $(Pipeline.Workspace)/artifacts
            displayName: 'List Artifact Directory Contents'
          - task: Docker@2
            displayName: 'Build Docker Image'
            inputs:
              containerRegistry: 'DockerHub'
              repository: 'parkasssist/aspice'
              command: 'buildAndPush'
              Dockerfile: 'Dockerfile'
              tags: |
                $(Build.BuildId)
                latest

  - stage: DefectDetectionAndLogging
    displayName: 'Defect Detection & Logging'
    dependsOn: Test
    jobs:
      - job: LogDefects
        displayName: 'Log Defects in CodeBeamer'
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.12'
              addToPath: true
          - script: |
              python scripts/defect_logging.py
            displayName: 'Log Defects to CodeBeamer'
            env:
              cb_user: $(cb_user)
              cb_password: $(cb_password)
          - script: |
              echo "Checking if defect_logging.py exists and the latest version"
              dir scripts\defect_logging.py
            displayName: 'Verify defect_logging.py Version'
